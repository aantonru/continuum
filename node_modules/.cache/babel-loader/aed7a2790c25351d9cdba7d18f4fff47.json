{"ast":null,"code":"//import axios from \"axios\";\nimport { store } from '../../index';\nexport function photosHasError(bool) {\n  return {\n    type: 'PHOTOS_HAS_ERRORED',\n    hasError: bool\n  };\n}\nexport function photosIsLoading(bool) {\n  return {\n    type: 'PHOTOS_IS_LOADING',\n    isLoading: bool\n  };\n}\nexport function photosFetchDataSuccess(photos) {\n  console.warn(photos);\n  return {\n    type: 'PHOTOS_FETCH_DATA_SUCCESS',\n    photos: photos\n  };\n}\nexport const photosClear = {\n  type: 'PHOTOS_CLEAR'\n};\nexport function photosFound(count) {\n  return {\n    type: 'PHOTOS_FOUND',\n    photosFound: count\n  };\n}\nexport function gotPredictions(id, predictions) {\n  return {\n    type: 'GOT_PRED',\n    id,\n    predictions\n  };\n}\nexport function getNsfw(id, url, width, height) {\n  return async dispatch => {\n    const img = new Image();\n    img.width = width;\n    img.height = height;\n    img.crossOrigin = 'anonymous';\n    img.src = url;\n    console.log(img);\n    let state = store.getState();\n    const predictions = await state.model.classify(img);\n    console.log(predictions);\n    dispatch(gotPredictions(id, predictions));\n  };\n}\nexport function photosSearch(params) {\n  console.log('--search params--');\n  console.log(params); //    let state0=store.getState();\n  //    console.warn(state0);\n\n  return dispatch => {\n    dispatch(photosIsLoading(true));\n    const VK = window.VK;\n    console.log('--test vk--');\n\n    if (VK && VK !== null && VK !== 'undefined') {\n      console.log('--vk ok--');\n      VK.Api.call('photos.search', {\n        lat: params.lat,\n        long: params.long,\n        sort: params.sort,\n        offset: params.offset,\n        count: params.count,\n        radius: params.radius,\n        start_time: params.start_time,\n        end_time: params.end_time,\n        v: params.v\n      }, r => {\n        // eslint-disable-line no-undef\n        dispatch(photosIsLoading(false));\n\n        if (r.response && r.response !== 'undefined' && r.response.items && r.response.items !== 'undefined') {\n          dispatch(photosFound(r.response.count));\n          dispatch(photosFetchDataSuccess(r.response.items)); //                    r.response.items.map((item) => {\n          //                        let size=Math.floor(item.sizes.length/2)+1;\n          //                        dispatch(getNsfw(item.id, item.sizes[size].url, item.sizes[size].width, item.sizes[size].height));\n          //                    })\n        } else {\n          dispatch(photosHasError());\n        }\n\n        console.log('--response--');\n        console.log(r);\n      });\n    } else {\n      console.log('--vk fail--');\n      dispatch(photosIsLoading(false));\n      dispatch(photosHasError());\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Shared/www/continuum/continuum/src/components/actions/photos.js"],"names":["store","photosHasError","bool","type","hasError","photosIsLoading","isLoading","photosFetchDataSuccess","photos","console","warn","photosClear","photosFound","count","gotPredictions","id","predictions","getNsfw","url","width","height","dispatch","img","Image","crossOrigin","src","log","state","getState","model","classify","photosSearch","params","VK","window","Api","call","lat","long","sort","offset","radius","start_time","end_time","v","r","response","items"],"mappings":"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","sourcesContent":["//import axios from \"axios\";\nimport { store } from '../../index';\n\nexport function photosHasError(bool) {\n    return {\n        type: 'PHOTOS_HAS_ERRORED',\n        hasError: bool\n    };\n}\n\nexport function photosIsLoading(bool) {\n    return {\n        type: 'PHOTOS_IS_LOADING',\n        isLoading: bool\n    };\n}\n\nexport function photosFetchDataSuccess(photos) {\n    console.warn(photos);\n    return {\n        type: 'PHOTOS_FETCH_DATA_SUCCESS',\n        photos: photos,\n    };\n}\n\nexport const photosClear = {\n    type: 'PHOTOS_CLEAR'\n}\n\nexport function photosFound(count) {\n    return {\n        type: 'PHOTOS_FOUND',\n        photosFound: count\n    };\n}\n\nexport function gotPredictions(id, predictions) {\n    return {\n        type: 'GOT_PRED',\n        id,\n        predictions\n    }\n}\n\nexport function getNsfw(id, url, width, height) {\n    return async (dispatch) => {\n    const img = new Image();\n    img.width=width;\n    img.height=height;\n    img.crossOrigin = 'anonymous';\n    img.src = url;\n    console.log(img);\n    let state=store.getState();\n    const predictions = await state.model.classify(img);    \n    console.log(predictions);\n    dispatch(gotPredictions(id,predictions));\n    }\n}\n\nexport function photosSearch(params) {\n    console.log('--search params--');\n    console.log(params);\n//    let state0=store.getState();\n//    console.warn(state0);\n \n    return (dispatch) => {\n        dispatch(photosIsLoading(true));\n        const VK = window.VK;\n        console.log('--test vk--')\n        if (VK && VK!==null && VK!=='undefined') {\n            console.log('--vk ok--');\n            VK.Api.call('photos.search', {lat:params.lat, long:params.long, sort:params.sort, offset:params.offset, count:params.count, radius:params.radius, start_time:params.start_time, end_time:params.end_time, v:params.v},(r) => { // eslint-disable-line no-undef\n                dispatch(photosIsLoading(false));\n                if (r.response && r.response!=='undefined' && r.response.items && r.response.items!=='undefined') {\n                    dispatch(photosFound(r.response.count));\n                    dispatch(photosFetchDataSuccess(r.response.items));\n//                    r.response.items.map((item) => {\n//                        let size=Math.floor(item.sizes.length/2)+1;\n//                        dispatch(getNsfw(item.id, item.sizes[size].url, item.sizes[size].width, item.sizes[size].height));\n//                    })\n                } else {\n                    dispatch(photosHasError())\n                }\n                console.log('--response--');\n                console.log(r);\n            });\n        } else {\n             console.log('--vk fail--');\n            dispatch(photosIsLoading(false));\n            dispatch(photosHasError())\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}