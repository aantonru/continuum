{"ast":null,"code":"//import axios from \"axios\";\nimport { store } from '../../index';\nexport function photosHasError(bool) {\n  bool = true;\n  console.warn(`errors ${bool}`);\n  return {\n    type: 'PHOTOS_HAS_ERROR',\n    photosHasError: bool\n  };\n}\nexport function photosIsLoading(bool) {\n  return {\n    type: 'PHOTOS_IS_LOADING',\n    photosIsLoading: bool\n  };\n}\nexport function photosFetchDataSuccess(photos) {\n  // console.warn(photos);\n  return {\n    type: 'PHOTOS_FETCH_DATA_SUCCESS',\n    photos: photos\n  };\n}\nexport const photosClear = {\n  type: 'PHOTOS_CLEAR'\n};\nexport function photosFound(count) {\n  return {\n    type: 'PHOTOS_FOUND',\n    photosFound: count\n  };\n}\nexport function gotPredictions(id, predictions) {\n  return {\n    type: 'GOT_PRED',\n    id,\n    predictions\n  };\n}\nexport function getNsfw(id, url, width, height) {\n  return async dispatch => {\n    const img = new Image();\n    img.width = width;\n    img.height = height;\n    img.crossOrigin = 'anonymous';\n    img.src = url;\n    console.log(img);\n    let state = store.getState();\n    const predictions = await state.model.classify(img);\n    console.log(predictions);\n    store.dispatch(gotPredictions(id, predictions));\n  };\n}\nexport function photosSearch(params) {\n  console.log('--search params--');\n  console.log(params); //    let state0=store.getState();\n  //    console.warn(state0);\n\n  return dispatch => {\n    store.dispatch({\n      type: \"PHOTOS_IS_LOADING\",\n      photosIsLoading: true\n    });\n    const VK = window.VK;\n    console.log('--test vk--');\n\n    if (VK && VK !== null && VK !== undefined) {\n      console.log('--vk ok--');\n      VK.Api.call('photos.search', {\n        lat: params.lat,\n        long: params.long,\n        sort: 1,\n        offset: params.offset,\n        count: params.count,\n        radius: params.radius,\n        start_time: params.start_time,\n        end_time: params.end_time,\n        v: params.v\n      }, r => {\n        // eslint-disable-line no-undef\n        store.dispatch({\n          type: \"PHOTOS_IS_LOADING\",\n          photosIsLoading: false\n        });\n        let items = r.response.items;\n        let count = r.response.count;\n\n        if (r && r.hasOwnProperty('response')) {\n          const countact = () => {\n            return {\n              type: \"PHOTOS_FOUND\",\n              photosFound: count\n            };\n          };\n\n          store.dispatch(countact());\n          store.dispatch(() => {\n            return {\n              type: \"PHOTOS_FETCH_DATA_SUCCESS\",\n              photos: [...items]\n            };\n          }); //                    r.response.items.map((item) => {\n          //                        let size=Math.floor(item.sizes.length/2)+1;\n          //                       store.dispatch(getNsfw(item.id, item.sizes[size].url, item.sizes[size].width, item.sizes[size].height));\n          //                    })\n        } else {\n          store.dispatch({\n            type: \"PHOTOS_HAS_ERROR\",\n            photosHasError: true\n          });\n        }\n\n        console.log(r);\n      });\n    } else {\n      store.dispatch({\n        type: \"PHOTOS_IS_LOADING\",\n        photosIsLoading: true\n      });\n      store.dispatch({\n        type: \"PHOTOS_HAS_ERROR\",\n        photosHasError: true\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Shared/www/continuum/continuum/src/components/actions/photos.js"],"names":["store","photosHasError","bool","console","warn","type","photosIsLoading","photosFetchDataSuccess","photos","photosClear","photosFound","count","gotPredictions","id","predictions","getNsfw","url","width","height","dispatch","img","Image","crossOrigin","src","log","state","getState","model","classify","photosSearch","params","VK","window","undefined","Api","call","lat","long","sort","offset","radius","start_time","end_time","v","r","items","response","hasOwnProperty","countact"],"mappings":"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","sourcesContent":["//import axios from \"axios\";\nimport { store } from '../../index';\n\nexport function photosHasError(bool) {\n    bool=true;\n    console.warn(`errors ${bool}`)\n    return {\n        type: 'PHOTOS_HAS_ERROR',\n        photosHasError: bool\n    };\n}\n\nexport function photosIsLoading(bool) {\n    return {\n        type: 'PHOTOS_IS_LOADING',\n        photosIsLoading: bool\n    };\n}\n\nexport function photosFetchDataSuccess(photos) {\n   // console.warn(photos);\n    return {\n        type: 'PHOTOS_FETCH_DATA_SUCCESS',\n        photos: photos,\n    };\n}\n\nexport const photosClear = {\n    type: 'PHOTOS_CLEAR'\n}\n\nexport function photosFound(count) {\n    return {\n        type: 'PHOTOS_FOUND',\n        photosFound: count\n    };\n}\n\nexport function gotPredictions(id, predictions) {\n    return {\n        type: 'GOT_PRED',\n        id,\n        predictions\n    }\n}\n\nexport function getNsfw(id, url, width, height) {\n    return async (dispatch) => {\n    const img = new Image();\n    img.width=width;\n    img.height=height;\n    img.crossOrigin = 'anonymous';\n    img.src = url;\n    console.log(img);\n    let state=store.getState();\n    const predictions = await state.model.classify(img);    \n    console.log(predictions);\n   store.dispatch(gotPredictions(id,predictions));\n    }\n}\n\nexport function photosSearch(params) {\n    console.log('--search params--');\n    console.log(params);\n//    let state0=store.getState();\n//    console.warn(state0);\n \n    return (dispatch) => {\n       store.dispatch({ type:\"PHOTOS_IS_LOADING\", photosIsLoading: true });\n        const VK = window.VK;\n        console.log('--test vk--')\n        if (VK && VK!==null && VK!==undefined) {\n            console.log('--vk ok--');\n            VK.Api.call('photos.search', {lat:params.lat, long:params.long, sort:1, offset:params.offset, count:params.count, radius:params.radius, start_time:params.start_time, end_time:params.end_time, v:params.v},(r) => { // eslint-disable-line no-undef\n                store.dispatch({ type:\"PHOTOS_IS_LOADING\", photosIsLoading: false });\n                let items=r.response.items;\n                let count=r.response.count;\n                if (r && r.hasOwnProperty('response')) {\n                    const countact=()=>{ return { type:\"PHOTOS_FOUND\", photosFound: count }};\n                    store.dispatch(countact());\n                    store.dispatch(()=>{ return { type:\"PHOTOS_FETCH_DATA_SUCCESS\", photos: [...items] }});\n//                    r.response.items.map((item) => {\n//                        let size=Math.floor(item.sizes.length/2)+1;\n//                       store.dispatch(getNsfw(item.id, item.sizes[size].url, item.sizes[size].width, item.sizes[size].height));\n//                    })\n                } else {\n                   store.dispatch({ type:\"PHOTOS_HAS_ERROR\", photosHasError: true })\n                }\n                console.log(r);\n            });\n        } else {\n           store.dispatch({ type:\"PHOTOS_IS_LOADING\", photosIsLoading: true })\n           store.dispatch({ type:\"PHOTOS_HAS_ERROR\", photosHasError:true })\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}