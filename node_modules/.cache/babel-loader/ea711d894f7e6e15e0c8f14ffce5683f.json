{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/www/continuum/continuum/src/components/GeoTest.js\";\nimport React from 'react';\nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\nconst shanghai = {\n  latitude: 31.1094,\n  longitude: 121.4114\n};\nexport const googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\n\nclass BasicDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: shanghai\n    };\n\n    this.onLocationChange = location => this.setState({\n      location: { ...this.state.location,\n        ...location\n      }\n    });\n\n    this.handleLatitudeChange = event => this.onLocationChange({\n      latitude: Number(event.target.value)\n    });\n\n    this.handleLongitudeChange = event => this.onLocationChange({\n      longitude: Number(event.target.value)\n    });\n  }\n\n  render() {\n    const {\n      location\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Basic Demo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"number\",\n      step: \"0.0000001\",\n      min: -90,\n      max: 90,\n      value: location.latitude,\n      onChange: this.handleLatitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"number\",\n      step: 0.0000001,\n      min: -180,\n      max: 180,\n      value: location.longitude,\n      onChange: this.handleLongitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(GoogleMapGeoPicker, {\n      apiKey: googleMapApiKey,\n      value: location,\n      onChange: this.onLocationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default BasicDemo;","map":{"version":3,"sources":["/Users/Shared/www/continuum/continuum/src/components/GeoTest.js"],"names":["React","GoogleMapGeoPicker","shanghai","latitude","longitude","googleMapApiKey","BasicDemo","Component","state","location","onLocationChange","setState","handleLatitudeChange","event","Number","target","value","handleLongitudeChange","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,OADG;AAEbC,EAAAA,SAAS,EAAE;AAFE,CAAjB;AAKA,OAAO,MAAMC,eAAe,GAAG,yCAAxB;;AAEP,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAEP;AADJ,KAD4B;;AAAA,SAKpCQ,gBALoC,GAKhBD,QAAD,IAAc,KAAKE,QAAL,CAAc;AAC7CF,MAAAA,QAAQ,EAAE,EACR,GAAG,KAAKD,KAAL,CAAWC,QADN;AAER,WAAGA;AAFK;AADmC,KAAd,CALG;;AAAA,SAYpCG,oBAZoC,GAYZC,KAAD,IAAW,KAAKH,gBAAL,CAAsB;AACtDP,MAAAA,QAAQ,EAAEW,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd;AADsC,KAAtB,CAZE;;AAAA,SAgBpCC,qBAhBoC,GAgBXJ,KAAD,IAAW,KAAKH,gBAAL,CAAsB;AACvDN,MAAAA,SAAS,EAAEU,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd;AADsC,KAAtB,CAhBC;AAAA;;AAoBpCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,GAAG,EAAE,CAAC,EAJR;AAKE,MAAA,GAAG,EAAE,EALP;AAME,MAAA,KAAK,EAAEC,QAAQ,CAACN,QANlB;AAOE,MAAA,QAAQ,EAAE,KAAKS,oBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAcE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAE,SAHR;AAIE,MAAA,GAAG,EAAE,CAAC,GAJR;AAKE,MAAA,GAAG,EAAE,GALP;AAME,MAAA,KAAK,EAAEH,QAAQ,CAACL,SANlB;AAOE,MAAA,QAAQ,EAAE,KAAKa,qBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,eA0BE,oBAAC,kBAAD;AAAoB,MAAA,MAAM,EAAEZ,eAA5B;AAA6C,MAAA,KAAK,EAAEI,QAApD;AAA8D,MAAA,QAAQ,EAAE,KAAKC,gBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF;AA8BD;;AArDmC;;AAwDtC,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\n\nconst shanghai = {\n    latitude: 31.1094,\n    longitude: 121.4114,\n};\n\nexport const googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\n\nclass BasicDemo extends React.Component {\n    state = {\n      location: shanghai,\n    };\n  \n    onLocationChange = (location) => this.setState({\n      location: {\n        ...this.state.location,\n        ...location,\n      }\n    });\n  \n    handleLatitudeChange = (event) => this.onLocationChange({\n      latitude: Number(event.target.value),\n    });\n  \n    handleLongitudeChange = (event) => this.onLocationChange({\n      longitude: Number(event.target.value),\n    });\n  \n    render() {\n      const { location } = this.state;\n  \n      return (\n        <div>\n          <h2>Basic Demo</h2>\n          <div className=\"input-control\">\n            <label>Latitude:</label>\n            <input\n              className=\"input\"\n              type=\"number\"\n              step=\"0.0000001\"\n              min={-90}\n              max={90}\n              value={location.latitude}\n              onChange={this.handleLatitudeChange}\n            />\n          </div>\n          <div className=\"input-control\">\n            <label>Latitude:</label>\n            <input\n              className=\"input\"\n              type=\"number\"\n              step={0.0000001}\n              min={-180}\n              max={180}\n              value={location.longitude}\n              onChange={this.handleLongitudeChange}\n            />\n          </div>\n          <GoogleMapGeoPicker apiKey={googleMapApiKey} value={location} onChange={this.onLocationChange} />\n        </div>\n      )\n    }\n  }\n  \n  export default BasicDemo;"]},"metadata":{},"sourceType":"module"}