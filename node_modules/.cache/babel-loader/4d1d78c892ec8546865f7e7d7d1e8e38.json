{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/www/continuum/continuum/src/components/Core.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { photosSearch, photosClear } from './actions/photos';\nimport { store } from '../index';\nimport './Core.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MyAuth from './MyAuth'; //import * as nsfwjs from 'nsfwjs'\n//import VK, { Auth } from \"react-vk\";\n//import { reduxForm, Field } from 'redux-form';\n//import LocationPicker from 'react-location-picker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//import createGoogleMapGeoPicker from 'react-geo-picker/lib/forms/redux-form/createGoogleMapGeoPicker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//const GoogleMapGeoPicker = createGoogleMapGeoPicker({ formName });\n\nconst googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\nconst defaultPosition = {\n  latitude: 51.625712,\n  longitude: 39.080306\n};\n\nclass GetPhotos extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.onLocationChange = location => this.setState({\n      location: { ...this.state.location,\n        ...location\n      }\n    });\n\n    this.handleLatitudeChange = event => this.onLocationChange({\n      latitude: Number(event.target.value)\n    });\n\n    this.handleLongitudeChange = event => this.onLocationChange({\n      longitude: Number(event.target.value)\n    });\n\n    this.state = {\n      showForm: true,\n      photoIndex: 0,\n      photos: [],\n      offset: 0,\n      isOpen: false,\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n      endDate: new Date(),\n      location: defaultPosition,\n      radius: 800,\n      advancedOptions: false,\n      searchPanel: true,\n      photosFound: 0,\n      predictions: [],\n      model: null,\n      busy: false,\n      photosIsLoading: false,\n      photosHasError: false\n    };\n    this.handleRadiusChange = this.handleRadiusChange.bind(this);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  handleChangeStartDate(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handleChangeEndDate(date) {\n    this.setState({\n      endDate: date\n    });\n  }\n\n  handleRadiusChange(event) {\n    this.setState({\n      radius: Number(event.target.value)\n    });\n  }\n\n  setRadius(r) {\n    this.setState({\n      radius: r\n    });\n  }\n\n  setDate(date) {\n    this.setState({\n      startDate: date\n    });\n    let now = new Date();\n    this.setState({\n      endDate: now\n    });\n  }\n\n  combineParams() {\n    let params = {};\n\n    if (document.querySelector('#radius') && document.querySelector('#radius').value) {\n      params.radius = document.querySelector('#radius').value;\n    }\n\n    params.start_time = Math.floor(this.state.startDate.getTime() / 1000);\n    params.end_time = Math.floor(this.state.endDate.getTime() / 1000);\n    params.lat = this.state.location.latitude;\n    params.long = this.state.location.longitude;\n    params.radius = this.state.radius;\n    params.sort = 0;\n    params.count = 100;\n    params.offset = 0;\n    params.v = 5.103;\n    return params;\n  }\n\n  getData() {\n    this.setState({\n      offset: 0\n    });\n    console.groupCollapsed('store');\n    console.log(store.getState());\n    console.groupEnd();\n\n    if (this.props.photos && this.props.photos.length > 0) {\n      console.log('*****clear*****');\n      store.dispatch(photosClear());\n    }\n\n    let params = this.combineParams();\n    store.dispatch(photosSearch(params));\n  }\n\n  getMoreData() {\n    let params = this.combineParams();\n    this.setState({\n      offset: this.props.offset + 100\n    });\n    params.offset = this.props.offset;\n    store.dispatch(photosSearch(params));\n  }\n\n  toggleOptions() {\n    if (!this.state.searchPanel) {\n      this.toggleSearchPanel();\n    }\n\n    this.setState({\n      advancedOptions: !this.state.advancedOptions\n    });\n  }\n\n  toggleSearchPanel() {\n    this.setState({\n      searchPanel: !this.state.searchPanel\n    });\n  }\n\n  render() {\n    if (window.VK === null || window.VK === undefined || !window.VK.Api) {\n      return /*#__PURE__*/React.createElement(MyAuth, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      });\n    }\n\n    if (this.props.photosIsLoading && !this.props.photosHasError) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"labelBig\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, \"Loading\");\n    }\n\n    if (this.props.photosHasError) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"labelBig\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, \"Error\");\n    }\n\n    let imagesList = '';\n\n    if (this.props.photos && this.props.photos.length > 0) {\n      imagesList = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imgContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"labelBig\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, \"Found \", this.props.photosFound, \" images\"), this.props.photos.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center-cropped\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, item.owner_id > 0 ? /*#__PURE__*/React.createElement(\"a\", {\n        className: \"vkLink\",\n        href: 'https://vk.com/id' + item.owner_id,\n        target: \"blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 47\n        }\n      }, \"VK\") : \"\", /*#__PURE__*/React.createElement(\"img\", {\n        ref: 'img_' + item.id,\n        src: item.sizes[1].url,\n        onClick: () => this.setState({\n          isOpen: true,\n          photoIndex: index\n        }),\n        width: item.sizes[1].width,\n        height: item.sizes[1].height,\n        className: \"imgTile\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }))));\n    }\n\n    const {\n      isOpen\n    } = this.state;\n    const {\n      location\n    } = this.state;\n    const day = new Date(new Date().setHours(0, 0, 0, 0));\n    const week = new Date();\n    week.setDate(week.getDate() - 7);\n    week.setHours(0, 0, 0, 0);\n    const month = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n    const year = new Date(new Date().getFullYear(), 0, 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coreApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: this.props.photosIsLoading === true ? \"spinner\" : \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"loading..\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInputToggle\",\n      onClick: () => this.toggleSearchPanel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"Toggle search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 89\n      }\n    }, \"\\uD83D\\uDD0D\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 149\n      }\n    }, \"Search\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 158\n      }\n    }), \"panel\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInputToggle\",\n      onClick: () => this.toggleOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"Toggle options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 85\n      }\n    }, \"\\u2699\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 144\n      }\n    }, \"Advanced\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 155\n      }\n    }), \"options\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputPanel \" + (this.state.searchPanel ? '' : 'hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInput \" + (this.state.advancedOptions ? '' : 'hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input1\",\n      type: \"number\",\n      step: \"0.0000001\",\n      min: -90,\n      max: 90,\n      value: location.latitude,\n      onChange: this.handleLatitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input1\",\n      type: \"number\",\n      step: 0.0000001,\n      min: -180,\n      max: 180,\n      value: location.longitude,\n      onChange: this.handleLongitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, \"Distance (m)\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"radius\",\n      className: \"input1\",\n      type: \"number\",\n      disabled: true,\n      placeholder: \"radius\",\n      onChange: this.handleRadiusChange,\n      value: this.state.radius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, \"From date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"input1\",\n      selected: this.state.startDate,\n      onChange: date => this.handleChangeStartDate(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"time\",\n      dateFormat: \"MMM d, yyyy HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"To date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"input1\",\n      selected: this.state.endDate,\n      onChange: date => this.handleChangeEndDate(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"time\",\n      dateFormat: \"MMM d, yyyy HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formMap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapGeoPicker, {\n      apiKey: googleMapApiKey,\n      value: location,\n      width: \"100%\",\n      onChange: this.onLocationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, \"Period\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === day.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === week.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(week),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }, \"Week\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === month.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(month),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === year.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(year),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, \"Distance\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 100 ? 'selected' : ''),\n      onClick: () => this.setRadius(100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"100 m\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 800 ? 'selected' : ''),\n      onClick: () => this.setRadius(800),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, \"800 m\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 6000 ? 'selected' : ''),\n      onClick: () => this.setRadius(6000),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, \"6 km\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 50000 ? 'selected' : ''),\n      onClick: () => this.setRadius(50000),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, \"50 km\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"input1\",\n      onClick: () => this.getData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, \"Find\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imagesList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.photos.length,\n      next: () => this.getMoreData(),\n      hasMore: this.state.offset <= 900 //                    loader={<p className=\"labelBig\">Loading...</p>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, imagesList), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n      imageTitle: this.props.photos[this.state.photoIndex].owner_id > 0 ? /*#__PURE__*/React.createElement(\"a\", {\n        className: \"vkLink vkLinkLightbox\",\n        href: 'https://vk.com/id' + this.props.photos[this.state.photoIndex].owner_id,\n        target: \"blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 97\n        }\n      }, \"VK\") : '',\n      mainSrc: this.props.photos[this.state.photoIndex].sizes[this.props.photos[this.state.photoIndex].sizes.length - 1].url,\n      nextSrc: this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes.length - 1].url,\n      prevSrc: this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes.length - 1].url,\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (this.state.photoIndex + 1) % this.props.photos.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    })));\n  }\n\n} //export default reduxForm({ form: formName })(GetPhotos);\n\n\nconst mapStateToProps = state => {\n  return {\n    photos: state.photos,\n    //  predictions: state.predictions,\n    photosFound: state.photosFound,\n    photosHasError: state.photosHasError,\n    photosIsLoading: state.photosIsLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: url => dispatch(photosSearch(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetPhotos); //export default GetPhotos;","map":{"version":3,"sources":["/Users/Shared/www/continuum/continuum/src/components/Core.js"],"names":["React","Component","connect","photosSearch","photosClear","store","DatePicker","Lightbox","GoogleMapGeoPicker","InfiniteScroll","MyAuth","googleMapApiKey","defaultPosition","latitude","longitude","GetPhotos","constructor","props","_isMounted","onLocationChange","location","setState","state","handleLatitudeChange","event","Number","target","value","handleLongitudeChange","showForm","photoIndex","photos","offset","isOpen","startDate","Date","getFullYear","getMonth","endDate","radius","advancedOptions","searchPanel","photosFound","predictions","model","busy","photosIsLoading","photosHasError","handleRadiusChange","bind","sleep","ms","Promise","resolve","setTimeout","handleChangeStartDate","date","handleChangeEndDate","setRadius","r","setDate","now","combineParams","params","document","querySelector","start_time","Math","floor","getTime","end_time","lat","long","sort","count","v","getData","console","groupCollapsed","log","getState","groupEnd","length","dispatch","getMoreData","toggleOptions","toggleSearchPanel","render","window","VK","undefined","Api","imagesList","map","item","index","owner_id","id","sizes","url","width","height","day","setHours","week","getDate","month","year","mapStateToProps","mapDispatchToProps","fetchData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { photosSearch, photosClear } from './actions/photos';\nimport { store } from '../index';\nimport './Core.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; \nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MyAuth from './MyAuth';\n\n//import * as nsfwjs from 'nsfwjs'\n//import VK, { Auth } from \"react-vk\";\n//import { reduxForm, Field } from 'redux-form';\n//import LocationPicker from 'react-location-picker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//import createGoogleMapGeoPicker from 'react-geo-picker/lib/forms/redux-form/createGoogleMapGeoPicker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n\n\n\n//const GoogleMapGeoPicker = createGoogleMapGeoPicker({ formName });\nconst googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\n\nconst defaultPosition = {\n    latitude: 51.625712,\n    longitude: 39.080306\n};\n\nclass GetPhotos extends Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props);\n        this.state = {\n            showForm: true,\n            photoIndex: 0,\n            photos:[],\n            offset:0,\n            isOpen: false,\n            startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n            endDate: new Date(),\n            location: defaultPosition,\n            radius:800,\n            advancedOptions:false,\n            searchPanel:true,\n            photosFound: 0,\n            predictions:[],\n            model:null,\n            busy:false,\n            photosIsLoading:false,\n            photosHasError:false\n        }    \n        this.handleRadiusChange = this.handleRadiusChange.bind(this);\n    }\n\n    sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n    handleChangeStartDate(date) {\n        this.setState({\n          startDate: date\n        });\n    };\n\n    handleChangeEndDate(date) {\n        this.setState({\n          endDate: date\n        });\n    };\n\n    onLocationChange = (location) => this.setState({\n        location: {\n          ...this.state.location,\n          ...location,\n        }\n    });\n\n    handleLatitudeChange = (event) => this.onLocationChange({\n        latitude: Number(event.target.value),\n    });\n    \n    handleLongitudeChange = (event) => this.onLocationChange({\n        longitude: Number(event.target.value),\n    });\n\n    handleRadiusChange(event) {\n        this.setState({radius: Number(event.target.value)})\n    };\n\n    setRadius(r) {\n        this.setState({\n            radius:r\n        })\n    }\n\n    setDate(date) {\n        this.setState({\n            startDate: date\n          });\n        let now=new Date();\n        this.setState({\n            endDate: now\n        });\n    }\n\n    combineParams() {\n        let params={};\n        if (document.querySelector('#radius') && document.querySelector('#radius').value ) { params.radius=document.querySelector('#radius').value}\n        params.start_time=Math.floor(this.state.startDate.getTime()/1000);\n        params.end_time=Math.floor(this.state.endDate.getTime()/1000);\n        params.lat=this.state.location.latitude;\n        params.long=this.state.location.longitude;\n        params.radius=this.state.radius;\n        params.sort=0;\n        params.count=100;\n        params.offset=0;\n        params.v=5.103;\n\n        return params;\n    }\n    \n    getData() {\n        this.setState({offset:0});\n        console.groupCollapsed('store');\n        console.log(store.getState());\n        console.groupEnd();\n        if (this.props.photos && this.props.photos.length>0) {\n            console.log('*****clear*****');\n            store.dispatch(photosClear());\n        }\n\n        let params=this.combineParams();\n        store.dispatch(photosSearch(params));\n    }\n\n    getMoreData() {\n        let params=this.combineParams();\n\n        this.setState({offset:this.props.offset+100});\n        params.offset=this.props.offset;\n        store.dispatch(photosSearch(params));\n        \n    }\n\n    toggleOptions() {\n        if (!this.state.searchPanel) {\n            this.toggleSearchPanel()\n        }\n        this.setState({\n            advancedOptions: !this.state.advancedOptions\n        })\n    }\n\n    toggleSearchPanel() {\n        this.setState({\n            searchPanel: !this.state.searchPanel\n        })\n    }\n\n    render () {\n        if (window.VK===null || window.VK===undefined || !window.VK.Api) {\n            return (\n                <MyAuth></MyAuth>\n            )\n        }\n        if ( this.props.photosIsLoading && !this.props.photosHasError) {\n            return (<p className=\"labelBig\">Loading</p>)\n        }\n        if ( this.props.photosHasError) {\n            return (<p className=\"labelBig\">Error</p>)\n        }\n\n        let imagesList='';\n        if (this.props.photos && this.props.photos.length>0) {\n                imagesList=(<div className=\"imgContainer\">\n                <p className=\"labelBig\">Found {this.props.photosFound} images</p>\n                {this.props.photos.map((item, index) => (\n                    <div className=\"center-cropped\" key={index}>\n                        { \n                           (item.owner_id>0)? <a className=\"vkLink\" href={'https://vk.com/id'+item.owner_id} target='blank'>VK</a>:\"\"\n                        }\n                        <img ref={'img_'+item.id} src={item.sizes[1].url} onClick={() => this.setState({ isOpen: true, photoIndex:index})} width={item.sizes[1].width} height={item.sizes[1].height} className=\"imgTile\" alt=\"\" />\n                    </div>\n                ))}\n                </div>)\n        }\n\n        const { isOpen } = this.state;\n        const { location } = this.state;\n        const day = new Date(new Date().setHours(0, 0, 0, 0));\n        const week = new Date();\n        week.setDate(week.getDate() - 7)\n        week.setHours(0,0,0,0);\n        const month = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n        const year = new Date(new Date().getFullYear(), 0, 1);\n        return (    \n            <div className=\"coreApp\">\n                <p className={ (this.props.photosIsLoading===true) ? \"spinner\":\"hidden\"}>loading..</p>\n\n                <div className=\"formInputToggle\" onClick={()=>this.toggleSearchPanel()}><span role=\"img\" aria-label=\"Toggle search\">&#128269;</span><p>Search<br/>panel</p></div>\n                <div className=\"formInputToggle\" onClick={()=>this.toggleOptions()}><span role=\"img\" aria-label=\"Toggle options\">&#9881;</span><p>Advanced<br/>options</p></div>\n\n                <div className={\"inputPanel \"+(this.state.searchPanel ? '':'hidden')}>\n                    <div className={\"formInput \"+(this.state.advancedOptions ? '':'hidden')}>\n                        <div className=\"input-control\">\n                            <p className='label'>Latitude:</p>\n                            <input\n                                className=\"input1\"\n                                type=\"number\"\n                                step=\"0.0000001\"\n                                min={-90}\n                                max={90}\n                                value={location.latitude}\n                                onChange={this.handleLatitudeChange}\n                            />\n                        </div>\n                        <div className=\"input-control\">\n                            <p className='label'>Latitude:</p>\n                            <input\n                                className=\"input1\"\n                                type=\"number\"\n                                step={0.0000001}\n                                min={-180}\n                                max={180}\n                                value={location.longitude}\n                                onChange={this.handleLongitudeChange}\n                            />\n                        </div>\n                        <div className=\"input-control\">\n                            <p className=\"label\">Distance (m)</p>\n                            <input id=\"radius\" className=\"input1\" type=\"number\" disabled placeholder=\"radius\" onChange={this.handleRadiusChange} value={this.state.radius}></input>\n                        </div>\n                        <hr />\n                        <p className=\"label\">From date</p>\n                        <DatePicker\n                            className=\"input1\"\n                            selected={this.state.startDate}\n                            onChange={date => this.handleChangeStartDate(date)}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={30}\n                            timeCaption=\"time\"\n                            dateFormat=\"MMM d, yyyy HH:mm\"\n                        />\n                        <p className=\"label\">To date</p>\n                        <DatePicker\n                            className=\"input1\"\n                            selected={this.state.endDate}\n                            onChange={date => this.handleChangeEndDate(date)}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={30}\n                            timeCaption=\"time\"\n                            dateFormat=\"MMM d, yyyy HH:mm\"\n                        />\n                    </div>\n                    <div className=\"formMap\">\n                        <GoogleMapGeoPicker apiKey={googleMapApiKey} value={location} width='100%' onChange={this.onLocationChange} />\n                    </div>\n                    <div className=\"formSelect\">\n                        <hr />\n                        <p className=\"label\">Period</p>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===day.getTime() ? 'selected':'')} onClick={()=>this.setDate(day)}>Day</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===week.getTime() ? 'selected':'')} onClick={()=>this.setDate(week)}>Week</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===month.getTime() ? 'selected':'')} onClick={()=>this.setDate(month)}>Month</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===year.getTime() ? 'selected':'')} onClick={()=>this.setDate(year)}>Year</button>\n                        <hr />\n                        <p className=\"label\">Distance</p>\n                        <button className={\"select1 \"+(this.state.radius===100 ? 'selected':'')} onClick={()=>this.setRadius(100)}>100 m</button>\n                        <button className={\"select1 \"+(this.state.radius===800 ? 'selected':'')} onClick={()=>this.setRadius(800)}>800 m</button>\n                        <button className={\"select1 \"+(this.state.radius===6000 ? 'selected':'')} onClick={()=>this.setRadius(6000)}>6 km</button>\n                        <button className={\"select1 \"+(this.state.radius===50000 ? 'selected':'')} onClick={()=>this.setRadius(50000)}>50 km</button>\n                    </div>\n                    <div className=\"formSelect\">\n                        <button className=\"input1\" onClick={()=>this.getData()}>Find</button>\n                    </div>\n                </div>\n                <div className=\"imagesList\">\n\n                    <InfiniteScroll\n                    dataLength={this.props.photos.length}\n                    next={()=>this.getMoreData()}\n                    hasMore={this.state.offset<=900}\n//                    loader={<p className=\"labelBig\">Loading...</p>}\n                    >\n                        {imagesList}\n                    </InfiniteScroll>\n\n                    {isOpen && (\n                        <Lightbox\n                            imageTitle={ this.props.photos[this.state.photoIndex].owner_id>0 ? (<a className=\"vkLink vkLinkLightbox\" href={'https://vk.com/id'+this.props.photos[this.state.photoIndex].owner_id} target='blank'>VK</a>):''}\n                            mainSrc={ this.props.photos[this.state.photoIndex].sizes[ this.props.photos[this.state.photoIndex].sizes.length-1].url}\n                            nextSrc={ this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes[ this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes.length-1].url}\n                            prevSrc={ this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes[ this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes.length-1].url}\n                            onCloseRequest={() => this.setState({ isOpen: false })}\n                            onMovePrevRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length,\n                            })\n                            }\n                            onMoveNextRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + 1) % this.props.photos.length,\n                            })\n                            }\n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\n//export default reduxForm({ form: formName })(GetPhotos);\n\n\nconst mapStateToProps = (state) => {\n    return {\n        photos: state.photos,\n      //  predictions: state.predictions,\n        photosFound: state.photosFound,\n        photosHasError: state.photosHasError,\n        photosIsLoading: state.photosIsLoading,\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (url) => dispatch(photosSearch(url))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetPhotos);\n//export default GetPhotos;"]},"metadata":{},"sourceType":"module"}