{"ast":null,"code":"var _jsxFileName = \"/Users/Shared/www/continuum/continuum/src/components/Core.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { photosSearch, photosClear } from './actions/photos';\nimport { store } from '../index';\nimport './Core.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MyAuth from './MyAuth';\nimport { waitForElement } from '@testing-library/react'; //import * as nsfwjs from 'nsfwjs'\n//import VK, { Auth } from \"react-vk\";\n//import { reduxForm, Field } from 'redux-form';\n//import LocationPicker from 'react-location-picker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//import createGoogleMapGeoPicker from 'react-geo-picker/lib/forms/redux-form/createGoogleMapGeoPicker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//const GoogleMapGeoPicker = createGoogleMapGeoPicker({ formName });\n\nconst googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\nconst defaultPosition = {\n  latitude: 51.625712,\n  longitude: 39.080306\n};\n\nclass GetPhotos extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this._loadModel = () => {// Load model from public folder\n      //   nsfwjs.load('/model/', {size:299}).then(model => {\n      //   this.setState({\n      //   model,\n      //  })\n      // })\n    };\n\n    this.getPredictions = async (id, url, width, height) => {\n      //       let r='img_'+id;\n      //       let myImg=this.refs.r;\n      const img = new Image();\n      img.width = width;\n      img.height = height;\n      img.crossOrigin = 'anonymous';\n      img.src = url;\n      await this.sleep(100);\n      const predictions = await this.state.model.classify(img);\n      console.log('^^^^pred^^^^^');\n      console.log('id: ', id, '  url', img.src);\n      console.log(predictions);\n      let newone = this.state.predictions;\n      newone[id] = predictions;\n      this.setState({\n        predictions: newone,\n        busy: false\n      });\n    };\n\n    this.onLocationChange = location => this.setState({\n      location: { ...this.state.location,\n        ...location\n      }\n    });\n\n    this.handleLatitudeChange = event => this.onLocationChange({\n      latitude: Number(event.target.value)\n    });\n\n    this.handleLongitudeChange = event => this.onLocationChange({\n      longitude: Number(event.target.value)\n    });\n\n    this.state = {\n      showForm: true,\n      photoIndex: 0,\n      photos: [],\n      offset: 0,\n      isOpen: false,\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n      endDate: new Date(),\n      location: defaultPosition,\n      radius: 800,\n      advancedOptions: false,\n      searchPanel: true,\n      photosFound: 0,\n      predictions: [],\n      model: null,\n      busy: false\n    };\n    this.handleRadiusChange = this.handleRadiusChange.bind(this);\n  }\n\n  componentDidMount() {//  this._loadModel()\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  checkContent() {\n    return;\n    let i = 0;\n    let item = this.props.photos[i];\n\n    while (item && this.state.predictions[item.id] && !this.state.busy) {\n      i++;\n      item = this.props.photos[i];\n    }\n\n    console.log(i);\n    console.log(item);\n    if (item) console.log(this.state.predictions[item.id]);\n    console.log(this.state.busy);\n    console.log(this.props.photos);\n\n    if (item && !this.state.predictions[item.id] && !this.state.busy) {\n      this.setState({\n        busy: true\n      });\n      console.log('got busy');\n      let size = 3;\n      this.getPredictions(item.id, item.sizes[size].url, item.sizes[size].width, item.sizes[size].height);\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.busy) {\n      this.checkContent();\n    }\n  }\n\n  handleChangeStartDate(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  handleChangeEndDate(date) {\n    this.setState({\n      endDate: date\n    });\n  }\n\n  handleRadiusChange(event) {\n    this.setState({\n      radius: Number(event.target.value)\n    });\n  }\n\n  setRadius(r) {\n    this.setState({\n      radius: r\n    });\n  }\n\n  setDate(date) {\n    this.setState({\n      startDate: date\n    });\n    let now = new Date();\n    this.setState({\n      endDate: now\n    });\n  }\n\n  combineParams() {\n    let params = {};\n\n    if (document.querySelector('#radius') && document.querySelector('#radius').value) {\n      params.radius = document.querySelector('#radius').value;\n    }\n\n    params.start_time = Math.floor(this.state.startDate.getTime() / 1000);\n    params.end_time = Math.floor(this.state.endDate.getTime() / 1000);\n    params.lat = this.state.location.latitude;\n    params.long = this.state.location.longitude;\n    params.radius = this.state.radius;\n    params.sort = 1;\n    params.count = 100;\n    params.offset = 0;\n    params.v = 5.103;\n    return params;\n  }\n\n  getData() {\n    this.setState({\n      offset: 0\n    });\n\n    if (this.props.photos && this.props.photos.length > 0) {\n      console.log('*****clear*****');\n      store.dispatch(photosClear);\n    }\n\n    let params = this.combineParams();\n    store.dispatch(photosSearch(params));\n  }\n\n  getMoreData() {\n    let params = this.combineParams();\n    this.setState({\n      offset: this.state.offset + 100\n    });\n    params.offset = this.state.offset;\n    store.dispatch(photosSearch(params));\n    console.warn(this.state);\n  }\n\n  toggleOptions() {\n    if (!this.state.searchPanel) {\n      this.toggleSearchPanel();\n    }\n\n    this.setState({\n      advancedOptions: !this.state.advancedOptions\n    });\n  }\n\n  toggleSearchPanel() {\n    this.setState({\n      searchPanel: !this.state.searchPanel\n    });\n  }\n\n  render() {\n    if (window.Vk === null && window.Vk === 'undefined' && !window.Vk.Api) {\n      return {\n        MyAuth\n      };\n    }\n\n    if (this.props.isLoading && !this.props.hasError) {//            return (<p className=\"labelBig\">Loading</p>)\n    }\n\n    if (this.props.hasError) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"labelBig\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, \"Error\");\n    }\n\n    let imagesList = '';\n\n    if (this.props.photos && this.props.photos.length > 0) {\n      imagesList = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imgContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"labelBig\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, \"Found \", this.props.photosFound, \" images\"), this.props.photos.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center-cropped\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }\n      }, item.owner_id > 0 && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"vkLink\",\n        href: 'https://vk.com/id' + item.owner_id,\n        target: \"blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }\n      }, \"VK\"), this.state.predictions[item.id] && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"predContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 33\n        }\n      }, this.state.predictions[item.id].map(pred => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pred\",\n        key: item.id + '_' + pred.className,\n        style: {\n          width: pred.probability * 100 + '%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 138\n        }\n      }, pred.className)))), /*#__PURE__*/React.createElement(\"img\", {\n        ref: 'img_' + item.id,\n        src: item.sizes[1].url,\n        onClick: () => this.setState({\n          isOpen: true,\n          photoIndex: index\n        }),\n        width: item.sizes[1].width,\n        height: item.sizes[1].height,\n        className: \"imgTile\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }))));\n    }\n\n    const {\n      isOpen\n    } = this.state;\n    const {\n      location\n    } = this.state;\n    const day = new Date(new Date().setHours(0, 0, 0, 0));\n    const week = new Date();\n    week.setDate(week.getDate() - 7);\n    week.setHours(0, 0, 0, 0);\n    const month = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n    const year = new Date(new Date().getFullYear(), 0, 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coreApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInputToggle\",\n      onClick: () => this.toggleSearchPanel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 89\n      }\n    }, \"\\uD83D\\uDD0D\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 122\n      }\n    }, \"Search\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 131\n      }\n    }), \"panel\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInputToggle\",\n      onClick: () => this.toggleOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 85\n      }\n    }, \"\\u2699\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 116\n      }\n    }, \"Advanced\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 127\n      }\n    }), \"options\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputPanel \" + (this.state.searchPanel ? '' : 'hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formInput \" + (this.state.advancedOptions ? '' : 'hidden'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input1\",\n      type: \"number\",\n      step: \"0.0000001\",\n      min: -90,\n      max: 90,\n      value: location.latitude,\n      onChange: this.handleLatitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, \"Latitude:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input1\",\n      type: \"number\",\n      step: 0.0000001,\n      min: -180,\n      max: 180,\n      value: location.longitude,\n      onChange: this.handleLongitudeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, \"Distance (m)\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"radius\",\n      className: \"input1\",\n      type: \"number\",\n      disabled: true,\n      placeholder: \"radius\",\n      onChange: this.handleRadiusChange,\n      value: this.state.radius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, \"From date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"input1\",\n      selected: this.state.startDate,\n      onChange: date => this.handleChangeStartDate(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"time\",\n      dateFormat: \"MMM d, yyyy HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, \"To date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"input1\",\n      selected: this.state.endDate,\n      onChange: date => this.handleChangeEndDate(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"time\",\n      dateFormat: \"MMM d, yyyy HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formMap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapGeoPicker, {\n      apiKey: googleMapApiKey,\n      value: location,\n      width: \"100%\",\n      onChange: this.onLocationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, \"Period\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === day.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() == week.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(week),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }\n    }, \"Week\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === month.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(month),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.startDate.getTime() === year.getTime() ? 'selected' : ''),\n      onClick: () => this.setDate(year),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, \"Distance\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 100 ? 'selected' : ''),\n      onClick: () => this.setRadius(100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, \"100 m\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 800 ? 'selected' : ''),\n      onClick: () => this.setRadius(800),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }, \"800 m\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 6000 ? 'selected' : ''),\n      onClick: () => this.setRadius(6000),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, \"6 km\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"select1 \" + (this.state.radius === 50000 ? 'selected' : ''),\n      onClick: () => this.setRadius(50000),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, \"50 km\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"input1\",\n      onClick: () => this.getData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, \"Find\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imagesList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.photos.length,\n      next: () => this.getMoreData(),\n      hasMore: this.state.offset <= 900 //                    loader={<p className=\"labelBig\">Loading...</p>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, imagesList), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n      imageTitle: this.props.photos[this.state.photoIndex].owner_id > 0 ? /*#__PURE__*/React.createElement(\"a\", {\n        className: \"vkLink vkLinkLightbox\",\n        href: 'https://vk.com/id' + this.props.photos[this.state.photoIndex].owner_id,\n        target: \"blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 97\n        }\n      }, \"VK\") : '',\n      mainSrc: this.props.photos[this.state.photoIndex].sizes[this.props.photos[this.state.photoIndex].sizes.length - 1].url,\n      nextSrc: this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes.length - 1].url,\n      prevSrc: this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes.length - 1].url,\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (this.state.photoIndex + 1) % this.props.photos.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    })));\n  }\n\n} //export default reduxForm({ form: formName })(GetPhotos);\n\n\nconst mapStateToProps = state => {\n  return {\n    photos: state !== undefined && state !== null ? state.photos : [],\n    //  predictions: state.predictions,\n    photosFound: state ? state.photosFound : false,\n    hasError: state ? state.PhotosHasError : false,\n    isLoading: state ? state.PhotosIsLoading : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: url => dispatch(photosSearch(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetPhotos); //export default GetPhotos;","map":{"version":3,"sources":["/Users/Shared/www/continuum/continuum/src/components/Core.js"],"names":["React","Component","connect","photosSearch","photosClear","store","DatePicker","Lightbox","GoogleMapGeoPicker","InfiniteScroll","MyAuth","waitForElement","googleMapApiKey","defaultPosition","latitude","longitude","GetPhotos","constructor","props","_isMounted","_loadModel","getPredictions","id","url","width","height","img","Image","crossOrigin","src","sleep","predictions","state","model","classify","console","log","newone","setState","busy","onLocationChange","location","handleLatitudeChange","event","Number","target","value","handleLongitudeChange","showForm","photoIndex","photos","offset","isOpen","startDate","Date","getFullYear","getMonth","endDate","radius","advancedOptions","searchPanel","photosFound","handleRadiusChange","bind","componentDidMount","ms","Promise","resolve","setTimeout","checkContent","i","item","size","sizes","componentDidUpdate","handleChangeStartDate","date","handleChangeEndDate","setRadius","r","setDate","now","combineParams","params","document","querySelector","start_time","Math","floor","getTime","end_time","lat","long","sort","count","v","getData","length","dispatch","getMoreData","warn","toggleOptions","toggleSearchPanel","render","window","Vk","Api","isLoading","hasError","imagesList","map","index","owner_id","pred","className","probability","day","setHours","week","getDate","month","year","mapStateToProps","undefined","PhotosHasError","PhotosIsLoading","mapDispatchToProps","fetchData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { photosSearch, photosClear } from './actions/photos';\nimport { store } from '../index';\nimport './Core.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; \nimport GoogleMapGeoPicker from 'react-geo-picker/lib/google-map';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MyAuth from './MyAuth';\nimport { waitForElement } from '@testing-library/react';\n\n//import * as nsfwjs from 'nsfwjs'\n//import VK, { Auth } from \"react-vk\";\n//import { reduxForm, Field } from 'redux-form';\n//import LocationPicker from 'react-location-picker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n//import createGoogleMapGeoPicker from 'react-geo-picker/lib/forms/redux-form/createGoogleMapGeoPicker';\n//import MapboxGeoPicker from 'react-geo-picker/lib/mapbox';\n\n\n\n//const GoogleMapGeoPicker = createGoogleMapGeoPicker({ formName });\nconst googleMapApiKey = 'AIzaSyAfcp4NLIW115eDyTYeEMpPIEQBI4RXrgs';\n\nconst defaultPosition = {\n    latitude: 51.625712,\n    longitude: 39.080306\n};\n\nclass GetPhotos extends Component {\n    _isMounted = false;\n    constructor(props) {\n        super(props);\n        this.state = {\n            showForm: true,\n            photoIndex: 0,\n            photos:[],\n            offset:0,\n            isOpen: false,\n            startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n            endDate: new Date(),\n            location: defaultPosition,\n            radius:800,\n            advancedOptions:false,\n            searchPanel:true,\n            photosFound: 0,\n            predictions:[],\n            model:null,\n            busy:false\n        }    \n        this.handleRadiusChange = this.handleRadiusChange.bind(this);\n    }\n\n    componentDidMount() {\n      //  this._loadModel()\n    }\n    \n    _loadModel = () => {\n        // Load model from public folder\n     //   nsfwjs.load('/model/', {size:299}).then(model => {\n       //   this.setState({\n         //   model,\n        //  })\n       // })\n    }\n\n    sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n    getPredictions = async (id,url, width, height) => {\n //       let r='img_'+id;\n //       let myImg=this.refs.r;\n        const img = new Image();\n        img.width=width;\n        img.height=height;\n        img.crossOrigin = 'anonymous';\n        img.src =url;\n        \n        await this.sleep(100);\n        const predictions = await this.state.model.classify(img);\n        console.log('^^^^pred^^^^^');\n        console.log('id: ',id,'  url',img.src);\n        console.log(predictions);\n        let newone=this.state.predictions;\n        newone[id]=predictions;\n        this.setState({\n            predictions:newone,\n            busy:false\n        });\n\n    }\n\n    checkContent() {\n        return\n        let i=0;\n        let item=this.props.photos[i];\n        while (item && this.state.predictions[item.id] && !this.state.busy) {\n            i++;\n            item=this.props.photos[i];\n        }\n\n        console.log(i);\n        console.log(item);\n        if (item) console.log(this.state.predictions[item.id]);\n        \n        console.log(this.state.busy);\n        console.log(this.props.photos);\n\n        if (item && !this.state.predictions[item.id] && !this.state.busy) {\n            this.setState({\n                busy:true\n            });\n            console.log('got busy');\n            let size=3;\n\n            this.getPredictions(item.id,item.sizes[size].url,item.sizes[size].width,item.sizes[size].height);\n        }\n        \n    }\n\n    componentDidUpdate() {\n        if (!this.state.busy) {\n            this.checkContent();\n        }\n    }\n\n    handleChangeStartDate(date) {\n        this.setState({\n          startDate: date\n        });\n    };\n\n    handleChangeEndDate(date) {\n        this.setState({\n          endDate: date\n        });\n    };\n\n    onLocationChange = (location) => this.setState({\n        location: {\n          ...this.state.location,\n          ...location,\n        }\n    });\n\n    handleLatitudeChange = (event) => this.onLocationChange({\n        latitude: Number(event.target.value),\n    });\n    \n    handleLongitudeChange = (event) => this.onLocationChange({\n        longitude: Number(event.target.value),\n    });\n\n    handleRadiusChange(event) {\n        this.setState({radius: Number(event.target.value)})\n    };\n\n    setRadius(r) {\n        this.setState({\n            radius:r\n        })\n    }\n\n    setDate(date) {\n        this.setState({\n            startDate: date\n          });\n        let now=new Date();\n        this.setState({\n            endDate: now\n          });\n    }\n\n    \n    combineParams() {\n        let params={};\n        if (document.querySelector('#radius') && document.querySelector('#radius').value ) { params.radius=document.querySelector('#radius').value}\n        params.start_time=Math.floor(this.state.startDate.getTime()/1000);\n        params.end_time=Math.floor(this.state.endDate.getTime()/1000);\n        params.lat=this.state.location.latitude;\n        params.long=this.state.location.longitude;\n        params.radius=this.state.radius;\n        params.sort=1;\n        params.count=100;\n        params.offset=0;\n        params.v=5.103;\n\n        return params;\n    }\n    \n    getData() {\n        this.setState({offset:0});\n\n        if (this.props.photos && this.props.photos.length>0) {\n            console.log('*****clear*****');\n            store.dispatch(photosClear);\n        }\n\n        let params=this.combineParams();\n        store.dispatch(photosSearch(params));\n    }\n\n    getMoreData() {\n        let params=this.combineParams();\n\n        this.setState({offset:this.state.offset+100});\n        params.offset=this.state.offset;\n        store.dispatch(photosSearch(params));\n        console.warn(this.state)\n    }\n\n    toggleOptions() {\n        if (!this.state.searchPanel) {\n            this.toggleSearchPanel()\n        }\n        this.setState({\n            advancedOptions: !this.state.advancedOptions\n        })\n    }\n\n    toggleSearchPanel() {\n        this.setState({\n            searchPanel: !this.state.searchPanel\n        })\n    }\n\n    render () {\n        if (window.Vk===null && window.Vk==='undefined' && !window.Vk.Api) {\n            return (\n                {MyAuth}\n            )\n        }\n        if (this.props.isLoading && !this.props.hasError) {\n//            return (<p className=\"labelBig\">Loading</p>)\n        }\n        if (this.props.hasError) {\n            return (<p className=\"labelBig\">Error</p>)\n        }\n\n        let imagesList='';\n        if (this.props.photos && this.props.photos.length>0) {\n                imagesList=(<div className=\"imgContainer\">\n                <p className=\"labelBig\">Found {this.props.photosFound} images</p>\n                {this.props.photos.map((item, index) => (\n                    <div className=\"center-cropped\" key={index}>\n                        { item.owner_id>0 &&\n                            <a className=\"vkLink\" href={'https://vk.com/id'+item.owner_id} target='blank'>VK</a>\n                        }\n\n                        { this.state.predictions[item.id] &&\n                                <div className=\"predContainer\">\n                                { this.state.predictions[item.id].map((pred) => (                                        \n                                        <div className=\"pred\" key={item.id+'_'+pred.className} style={{width: pred.probability*100+'%'}}><p>{pred.className}</p></div>\n                                ))}\n                                </div>\n                        }\n                        <img ref={'img_'+item.id} src={item.sizes[1].url} onClick={() => this.setState({ isOpen: true, photoIndex:index})} width={item.sizes[1].width} height={item.sizes[1].height} className=\"imgTile\" alt=\"\" />\n                    </div>\n                ))}\n                </div>)\n        }\n\n        const { isOpen } = this.state;\n        const { location } = this.state;\n        const day = new Date(new Date().setHours(0, 0, 0, 0));\n        const week = new Date();\n        week.setDate(week.getDate() - 7)\n        week.setHours(0,0,0,0);\n        const month = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n        const year = new Date(new Date().getFullYear(), 0, 1);\n\n        return (    \n            <div className=\"coreApp\">\n                <div className=\"formInputToggle\" onClick={()=>this.toggleSearchPanel()}><span role=\"img\">&#128269;</span><p>Search<br/>panel</p></div>\n                <div className=\"formInputToggle\" onClick={()=>this.toggleOptions()}><span role=\"img\">&#9881;</span><p>Advanced<br/>options</p></div>\n\n                <div className={\"inputPanel \"+(this.state.searchPanel ? '':'hidden')}>\n                    <div className={\"formInput \"+(this.state.advancedOptions ? '':'hidden')}>\n                        <div className=\"input-control\">\n                            <p className='label'>Latitude:</p>\n                            <input\n                                className=\"input1\"\n                                type=\"number\"\n                                step=\"0.0000001\"\n                                min={-90}\n                                max={90}\n                                value={location.latitude}\n                                onChange={this.handleLatitudeChange}\n                            />\n                        </div>\n                        <div className=\"input-control\">\n                            <p className='label'>Latitude:</p>\n                            <input\n                                className=\"input1\"\n                                type=\"number\"\n                                step={0.0000001}\n                                min={-180}\n                                max={180}\n                                value={location.longitude}\n                                onChange={this.handleLongitudeChange}\n                            />\n                        </div>\n                        <div className=\"input-control\">\n                            <p className=\"label\">Distance (m)</p>\n                            <input id=\"radius\" className=\"input1\" type=\"number\" disabled placeholder=\"radius\" onChange={this.handleRadiusChange} value={this.state.radius}></input>\n                        </div>\n                        <hr />\n                        <p className=\"label\">From date</p>\n                        <DatePicker\n                            className=\"input1\"\n                            selected={this.state.startDate}\n                            onChange={date => this.handleChangeStartDate(date)}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={30}\n                            timeCaption=\"time\"\n                            dateFormat=\"MMM d, yyyy HH:mm\"\n                        />\n                        <p className=\"label\">To date</p>\n                        <DatePicker\n                            className=\"input1\"\n                            selected={this.state.endDate}\n                            onChange={date => this.handleChangeEndDate(date)}\n                            showTimeSelect\n                            timeFormat=\"HH:mm\"\n                            timeIntervals={30}\n                            timeCaption=\"time\"\n                            dateFormat=\"MMM d, yyyy HH:mm\"\n                        />\n                    </div>\n                    <div className=\"formMap\">\n                        <GoogleMapGeoPicker apiKey={googleMapApiKey} value={location} width='100%' onChange={this.onLocationChange} />\n                    </div>\n                    <div className=\"formSelect\">\n                        <hr />\n                        <p className=\"label\">Period</p>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===day.getTime() ? 'selected':'')} onClick={()=>this.setDate(day)}>Day</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()==week.getTime() ? 'selected':'')} onClick={()=>this.setDate(week)}>Week</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===month.getTime() ? 'selected':'')} onClick={()=>this.setDate(month)}>Month</button>\n                        <button className={\"select1 \"+(this.state.startDate.getTime()===year.getTime() ? 'selected':'')} onClick={()=>this.setDate(year)}>Year</button>\n                        <hr />\n                        <p className=\"label\">Distance</p>\n                        <button className={\"select1 \"+(this.state.radius===100 ? 'selected':'')} onClick={()=>this.setRadius(100)}>100 m</button>\n                        <button className={\"select1 \"+(this.state.radius===800 ? 'selected':'')} onClick={()=>this.setRadius(800)}>800 m</button>\n                        <button className={\"select1 \"+(this.state.radius===6000 ? 'selected':'')} onClick={()=>this.setRadius(6000)}>6 km</button>\n                        <button className={\"select1 \"+(this.state.radius===50000 ? 'selected':'')} onClick={()=>this.setRadius(50000)}>50 km</button>\n                    </div>\n                    <div className=\"formSelect\">\n                        <button className=\"input1\" onClick={()=>this.getData()}>Find</button>\n                    </div>\n                </div>\n                <div className=\"imagesList\">\n                    <InfiniteScroll\n                    dataLength={this.props.photos.length}\n                    next={()=>this.getMoreData()}\n                    hasMore={this.state.offset<=900}\n//                    loader={<p className=\"labelBig\">Loading...</p>}\n                    >\n                        {imagesList}\n                    </InfiniteScroll>\n\n                    {isOpen && (\n                        <Lightbox\n                            imageTitle={ this.props.photos[this.state.photoIndex].owner_id>0 ? (<a className=\"vkLink vkLinkLightbox\" href={'https://vk.com/id'+this.props.photos[this.state.photoIndex].owner_id} target='blank'>VK</a>):''}\n                            mainSrc={this.props.photos[this.state.photoIndex].sizes[this.props.photos[this.state.photoIndex].sizes.length-1].url}\n                            nextSrc={this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + 1) % this.props.photos.length].sizes.length-1].url}\n                            prevSrc={this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes[this.props.photos[(this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length].sizes.length-1].url}\n                            onCloseRequest={() => this.setState({ isOpen: false })}\n                            onMovePrevRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + this.props.photos.length - 1) % this.props.photos.length,\n                            })\n                            }\n                            onMoveNextRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + 1) % this.props.photos.length,\n                            })\n                            }\n                        />\n                    )}\n            </div>\n        </div>\n        )\n    }\n}\n\n//export default reduxForm({ form: formName })(GetPhotos);\n\n\nconst mapStateToProps = (state) => {\n    return {\n        photos: (state!==undefined && state!==null)?state.photos:[],\n      //  predictions: state.predictions,\n        photosFound: (state)?state.photosFound:false,\n        hasError: (state)?state.PhotosHasError:false,\n        isLoading: (state)?state.PhotosIsLoading:false\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (url) => dispatch(photosSearch(url))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetPhotos);\n//export default GetPhotos;"]},"metadata":{},"sourceType":"module"}